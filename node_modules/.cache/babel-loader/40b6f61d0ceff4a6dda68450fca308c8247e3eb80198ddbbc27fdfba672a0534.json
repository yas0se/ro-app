{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hamda\\\\Desktop\\\\ro-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { DataSet, Network } from 'vis-network/standalone/esm/vis-network';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [nodesList, setNodesList] = useState(['A', 'B', 'C']);\n  const [matrix, setMatrix] = useState(Array(3).fill().map(() => Array(3).fill('')));\n  const [t, setT] = useState({});\n  const [startNode, setStartNode] = useState('A'); // Noeud de départ\n  const [terminal, setTerminal] = useState({});\n  const handleInputChange = (rowIndex, colIndex, value) => {\n    const updatedMatrix = matrix.map((row, i) => row.map((cell, j) => i === rowIndex && j === colIndex ? value : cell));\n    setMatrix(updatedMatrix);\n  };\n  const addNode = () => {\n    const newNode = String.fromCharCode(65 + nodesList.length); // Lettre suivante (A, B, C...)\n    setNodesList([...nodesList, newNode]);\n\n    // Mettre à jour la matrice avec une nouvelle ligne et une nouvelle colonne pour le nœud\n    const newMatrix = matrix.map(row => [...row, '']);\n    newMatrix.push(Array(nodesList.length + 1).fill(''));\n    setMatrix(newMatrix);\n  };\n  const removeNode = () => {\n    if (nodesList.length <= 1) return; // Empêcher la suppression si un seul nœud reste\n    const updatedNodesList = nodesList.slice(0, -1);\n    setNodesList(updatedNodesList);\n\n    // Mettre à jour la matrice en supprimant la dernière ligne et la dernière colonne\n    const newMatrix = matrix.slice(0, -1).map(row => row.slice(0, -1));\n    setMatrix(newMatrix);\n  };\n  const generateGraph = () => {\n    const nodes = nodesList.map((node, index) => ({\n      id: index + 1,\n      label: node\n    }));\n    const edges = [];\n    const newT = {};\n    nodesList.forEach((node, rowIndex) => {\n      newT[node] = [];\n      nodesList.forEach((targetNode, colIndex) => {\n        const weight = parseInt(matrix[rowIndex][colIndex]);\n        if (!isNaN(weight)) {\n          edges.push({\n            from: rowIndex + 1,\n            to: colIndex + 1,\n            label: weight.toString(),\n            arrows: 'to'\n          });\n          newT[node].push([targetNode, weight]);\n        }\n      });\n    });\n    setT(newT); // Stocker les informations dans `t`\n    drawGraph(nodes, edges);\n  };\n  const drawGraph = (nodes, edges) => {\n    const container = document.getElementById('network');\n    if (!container) {\n      console.error('Le conteneur du graphe est introuvable');\n      return;\n    }\n    const data = {\n      nodes: new DataSet(nodes),\n      edges: new DataSet(edges)\n    };\n    const options = {\n      edges: {\n        font: {\n          align: 'top'\n        },\n        color: {\n          color: 'gray'\n        },\n        arrows: {\n          to: {\n            enabled: true,\n            type: 'arrow'\n          }\n        }\n      }\n    };\n    new Network(container, data, options);\n  };\n  const calculateShortestPath = () => {\n    let s = startNode; //départ\n    let terminal = {};\n    let changed = [s];\n    let tempchanged = [];\n    let nbS = 0;\n    for (const key in t) {\n      terminal[key] = 'infinity';\n    }\n    for (const key in t) {\n      if (key === s) {\n        terminal[key] = 0;\n      }\n      nbS++;\n    }\n    for (let i = 0; i < nbS; i++) {\n      for (const key of changed) {\n        t[key].forEach(([relatedKey, value]) => {\n          if (terminal[relatedKey] > value + terminal[key]) {\n            terminal[relatedKey] = value + terminal[key];\n            tempchanged.push(relatedKey);\n          }\n          if (terminal[relatedKey] === 'infinity') {\n            terminal[relatedKey] = value + terminal[key];\n            tempchanged.push(relatedKey);\n          }\n        });\n      }\n      changed = tempchanged;\n      tempchanged = [];\n      console.log(i + 1, ' changed: ', changed);\n      if (i === nbS - 1 && changed.length !== 0) {\n        alert('Présence d une boucle négative!!!');\n      }\n    }\n    console.log('terminal: ', terminal);\n    setTerminal(terminal);\n  };\n  useEffect(() => {\n    generateGraph();\n  }, [nodesList, matrix]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Matrix Input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      border: \"1\",\n      style: {\n        margin: '20px auto',\n        borderCollapse: 'collapse'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"From/To\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this), nodesList.map(node => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: node\n          }, node, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: nodesList.map((node, rowIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: node\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 15\n          }, this), nodesList.map((_, colIndex) => /*#__PURE__*/_jsxDEV(\"td\", {\n            children: rowIndex === colIndex ? /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                backgroundColor: '#ccc',\n                width: '100%',\n                height: '100%'\n              },\n              children: \"\\xA0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: matrix[rowIndex][colIndex],\n              onChange: e => handleInputChange(rowIndex, colIndex, e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 21\n            }, this)\n          }, colIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 17\n          }, this))]\n        }, node, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addNode,\n      children: \"Add Node\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: removeNode,\n      disabled: nodesList.length <= 1,\n      children: \"Remove Node\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"startNode\",\n        children: \"Start Node:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"startNode\",\n        value: startNode,\n        onChange: e => setStartNode(e.target.value),\n        children: nodesList.map(node => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: node,\n          children: node\n        }, node, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: calculateShortestPath,\n        children: \"Calculate Shortest Path\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"network\",\n      style: {\n        height: '300px',\n        width: '100%',\n        marginTop: '20px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      style: {\n        textAlign: 'left',\n        marginTop: '20px'\n      },\n      children: [\"terminal = \", JSON.stringify(terminal, null, 2)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"bcrydEp1ZiJZgCxSTaV/lzw/LgY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","DataSet","Network","jsxDEV","_jsxDEV","App","_s","nodesList","setNodesList","matrix","setMatrix","Array","fill","map","t","setT","startNode","setStartNode","terminal","setTerminal","handleInputChange","rowIndex","colIndex","value","updatedMatrix","row","i","cell","j","addNode","newNode","String","fromCharCode","length","newMatrix","push","removeNode","updatedNodesList","slice","generateGraph","nodes","node","index","id","label","edges","newT","forEach","targetNode","weight","parseInt","isNaN","from","to","toString","arrows","drawGraph","container","document","getElementById","console","error","data","options","font","align","color","enabled","type","calculateShortestPath","s","changed","tempchanged","nbS","key","relatedKey","log","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","border","style","margin","borderCollapse","_","backgroundColor","width","height","onChange","e","target","onClick","disabled","marginTop","htmlFor","textAlign","JSON","stringify","_c","$RefreshReg$"],"sources":["C:/Users/hamda/Desktop/ro-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { DataSet, Network } from 'vis-network/standalone/esm/vis-network';\n\nfunction App() {\n  const [nodesList, setNodesList] = useState(['A', 'B', 'C']);\n  const [matrix, setMatrix] = useState(\n    Array(3).fill().map(() => Array(3).fill(''))\n  );\n  const [t, setT] = useState({});\n  const [startNode, setStartNode] = useState('A'); // Noeud de départ\n  const [terminal, setTerminal] = useState({});\n\n  const handleInputChange = (rowIndex, colIndex, value) => {\n    const updatedMatrix = matrix.map((row, i) =>\n      row.map((cell, j) => (i === rowIndex && j === colIndex ? value : cell))\n    );\n    setMatrix(updatedMatrix);\n  };\n\n  const addNode = () => {\n    const newNode = String.fromCharCode(65 + nodesList.length); // Lettre suivante (A, B, C...)\n    setNodesList([...nodesList, newNode]);\n    \n    // Mettre à jour la matrice avec une nouvelle ligne et une nouvelle colonne pour le nœud\n    const newMatrix = matrix.map(row => [...row, '']);\n    newMatrix.push(Array(nodesList.length + 1).fill(''));\n    setMatrix(newMatrix);\n  };\n\n  const removeNode = () => {\n    if (nodesList.length <= 1) return; // Empêcher la suppression si un seul nœud reste\n    const updatedNodesList = nodesList.slice(0, -1);\n    setNodesList(updatedNodesList);\n\n    // Mettre à jour la matrice en supprimant la dernière ligne et la dernière colonne\n    const newMatrix = matrix.slice(0, -1).map(row => row.slice(0, -1));\n    setMatrix(newMatrix);\n  };\n\n  const generateGraph = () => {\n    const nodes = nodesList.map((node, index) => ({ id: index + 1, label: node }));\n    const edges = [];\n    const newT = {};\n\n    nodesList.forEach((node, rowIndex) => {\n      newT[node] = [];\n      nodesList.forEach((targetNode, colIndex) => {\n        const weight = parseInt(matrix[rowIndex][colIndex]);\n        if (!isNaN(weight)) {\n          edges.push({\n            from: rowIndex + 1,\n            to: colIndex + 1,\n            label: weight.toString(),\n            arrows: 'to',\n          });\n          newT[node].push([targetNode, weight]);\n        }\n      });\n    });\n\n    setT(newT); // Stocker les informations dans `t`\n    drawGraph(nodes, edges);\n  };\n\n  const drawGraph = (nodes, edges) => {\n    const container = document.getElementById('network');\n    if (!container) {\n      console.error('Le conteneur du graphe est introuvable');\n      return;\n    }\n\n    const data = { nodes: new DataSet(nodes), edges: new DataSet(edges) };\n    const options = {\n      edges: {\n        font: { align: 'top' },\n        color: { color: 'gray' },\n        arrows: { to: { enabled: true, type: 'arrow' } },\n      },\n    };\n\n    new Network(container, data, options);\n  };\n\n  const calculateShortestPath = () => {\n    let s = startNode; //départ\n    let terminal = {};\n    let changed = [s];\n    let tempchanged = [];\n    let nbS = 0;\n\n    for (const key in t) {\n      terminal[key] = 'infinity';\n    }\n\n    for (const key in t) {\n      if (key === s) {\n        terminal[key] = 0;\n      }\n      nbS++;\n    }\n\n    for (let i = 0; i < nbS; i++) {\n      for (const key of changed) {\n        t[key].forEach(([relatedKey, value]) => {\n          if (terminal[relatedKey] > value + terminal[key]) {\n            terminal[relatedKey] = value + terminal[key];\n            tempchanged.push(relatedKey);\n          }\n          if (terminal[relatedKey] === 'infinity') {\n            terminal[relatedKey] = value + terminal[key];\n            tempchanged.push(relatedKey);\n          }\n        });\n      }\n\n      changed = tempchanged;\n      tempchanged = [];\n      console.log(i + 1, ' changed: ', changed);\n\n      if (i === nbS - 1 && changed.length !== 0) {\n        alert('Présence d une boucle négative!!!');\n      }\n    }\n\n    console.log('terminal: ', terminal);\n    setTerminal(terminal);\n  };\n\n  useEffect(() => {\n    generateGraph();\n  }, [nodesList, matrix]);\n\n  return (\n    <div className=\"App\">\n      <h1>Matrix Input</h1>\n      <table border=\"1\" style={{ margin: '20px auto', borderCollapse: 'collapse' }}>\n        <thead>\n          <tr>\n            <th>From/To</th>\n            {nodesList.map((node) => (\n              <th key={node}>{node}</th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {nodesList.map((node, rowIndex) => (\n            <tr key={node}>\n              <td>{node}</td>\n              {nodesList.map((_, colIndex) => (\n                <td key={colIndex}>\n                  {rowIndex === colIndex ? (\n                    <div style={{ backgroundColor: '#ccc', width: '100%', height: '100%' }}>\n                      &nbsp;\n                    </div>\n                  ) : (\n                    <input\n                      type=\"number\"\n                      value={matrix[rowIndex][colIndex]}\n                      onChange={(e) =>\n                        handleInputChange(rowIndex, colIndex, e.target.value)\n                      }\n                    />\n                  )}\n                </td>\n              ))}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      <button onClick={addNode}>Add Node</button>\n      <button onClick={removeNode} disabled={nodesList.length <= 1}>Remove Node</button>\n      <div style={{ marginTop: '20px' }}>\n        <label htmlFor=\"startNode\">Start Node:</label>\n        <select\n          id=\"startNode\"\n          value={startNode}\n          onChange={(e) => setStartNode(e.target.value)}\n        >\n          {nodesList.map((node) => (\n            <option key={node} value={node}>\n              {node}\n            </option>\n          ))}\n        </select>\n        <button onClick={calculateShortestPath}>Calculate Shortest Path</button>\n      </div>\n      <div id=\"network\" style={{ height: '300px', width: '100%', marginTop: '20px' }}></div>\n      <pre style={{ textAlign: 'left', marginTop: '20px' }}>\n        terminal = {JSON.stringify(terminal, null, 2)}\n      </pre>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}